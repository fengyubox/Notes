文字相关属性
    font-style: 文字样式
        normal
        italic
    font-weight:
        bold 加粗
        bolder 比加粗还要粗 
        lighter 细线,默认就是细线
        100-900之间整百的数
    font-size: 10px 文字大小属性
    font-family: '字体1', '字体2' 文字字体属性,可设置多个用做备选方案
        但凡是中文字体,里面都包含了英文
        但凡是英文字体,里面都没有包含中文
        即中文字体可以处理英文,但英文字体不能处理中文
        所以如果想给界面中的英文单独设置字体,那么英文的字体必须写在中文的前面
        开发中建议全部使用英文
    font 属性简写,可以一次设置上面的属性
        style,weight可以省略,并且style和weight的位置可以交换
        font italic bold 10px '楷体';

文本装饰属性
    text-decoration: underline | line-through | overline | none(多用于去掉超链接的下划线);
    text-align: left | right | center;
    text-indent: 2em | 10px; 缩进两个文字的宽度或10个像素,建议使用em

CSS选择器 
    id选择器
    类选择器
    后代选择器(包括嵌套的)
      标签1 标签2 {

      }  
    子元素选择器(>之间不能有空格)
      标签1>标签2 {

      }
    交集选择器
      找出两个选择器相交的
      选择器1选择器2 {

      }
    并集选择器
      选择器1,选择器2 {

      }
    兄弟选择器
      1. 相邻兄弟选择器 CSS2
           意思是给紧跟在选择器1之后的选择器2赋予css属性
           选择器1+选择器2 {

           }
      2. 通用兄弟选择器 CSS3
           意思是给在选择器1之后的所有选择器2赋予css属性(不需紧跟在后)
           选择器1～选择器2 {

           }
    序选择器
        1 标签:first-child 所有同级别中的第一个,不区分类型,取出来的标签可能不满足指定的标签就不会赋值
        2 标签:first-of-type 所有同级别同类型中的第一个
        3 标签:last-child 类似first-child,只是取最后一个
        4 标签:last-of-type 类似last-of-type,只是取最后一个
        5 标签:nth-child(3) 类似first-child,只是取指定的次序 
            nth-child(odd) 代表所有奇数
            nth-child(even) 代表所有偶数
            nth-child(2n+0) 按个数下标带入公式计算,如果返回的数字是个数范围内的,则套用到对应的标签上
        6 标签:nth-of-type(3) 类似first-of-type,只是取指定的次序
        7 标签:nth-last-child(2) 类似first-child,只是取指定的倒的次序
        8 标签:nth-last-of-type(2) 类似first-of-type,只是取指定的倒的次序
            同样可以使用odd,even
        9 标签:only-child 选出同级中唯一的元素(必须只有自己一个元素)
        10 标签:only-of-type 选出同级中唯一的元素(但是不是一定非要只有自己一个元素,如果出现其他类型也可以)
    属性选择器
        标签[attribute]
        标签[attribute=value] 
            是否以value的取值开头
            [attribute|=value] CSS2 
            [attribute^=value] CSS3
            CSS2中的只能找到value开头,并且value是被-和其他内容隔开的
            CSS3中的只要是以value开头的都可以找到,无论有没有被-隔开

            是否以value的取值结尾
            [attribute$=value] CSS3

            属性的取值是否包含某个特定的值
            [attribute~=value] CSS2
            [attribute*=value] CSS3
            CSS2中的只能找到独立的单词,也就是包含value并且value是被空格隔开的
            CSS3中的只要包含value就可以找到
    通配符选择器
        给所有标签赋值,会遍历所有标签,所以当页面标签比较多时,性能就会比较差,所以一般不会使用
        * {

        }

CSS三大特性
    1. 继承性
        并不是有的属性都可以继承
        只有以color/font-/text-/line开头的属性才可以继承
        不仅仅是儿子,只要是后代都可以继承
        特例
            1. a标签的文字颜色和下划线是不能继承自父代的
            2. h标签的文字大小是不能继承自父代的
    2. 层叠性
        就是CSS处理冲突的一种能力
        冲突也就是多个选择器选中同一个标签,然后又设置了相同的属性
        优先级判断
            1. 是否是直接选中(间接选中就是指继承)
                如果是间接选中,谁离目标标签比较近就用谁
            2. 是否是相同的选择器
                如果都是直接选中,并且都是同类型的选择器,那么就是谁写在后面的就用谁
            3. 不同选择器
                如果都是直接选中,并且不是相同类型选择器,就会按照选择器的优先级来层叠
                id > 类 > 标签 > 通配符 > 继承 > 浏览器默认
    3. !important
        可以将被指定的属性的优先级提升为最高
        important只能用于直接选中,不能用于间接选中
        通配符选择器选中的标签也是直接选中的

    当多个选择器混合在一起使用时,可以通过计算权重来判断谁的优先级高
        1. 首先计算选择其中有多少个id,id多的选择器优先级最高
        2. 如果id的个数一样,那么再看类名的个数,类名多的优先级最高
        3. 如果类名的个数一样,那么再看标签名称的个数,标签名多的优先级最高
        4. 如果上面3种都一样,那么就不会继续往下计算了,那么此时谁写在后面听谁的
    只有选择器是直接选中标签的才需要计算权重

div和span区别
    div会单独占一行,span不会
    div是容器级别标签,span是文本级别的标签
    容器级标签中可以嵌套其他所有的标签
    文本级别的标签只能嵌套文字/超链接/图片
    容器级标签
        div h ul ol dl li dt dd ...
    文本级的标签
        span p buis stong em ins del ...
        
块级元素(会独占一行;display: block)
    块级元素会独占一行
    如果没有设置宽度,那么默认和父元素一样宽
    p div h ul ol dl li dt dd
行内元素(display: inline)
    行内诶元素不会独占一行
    如果没有设置宽度,那么默认和父元素一样宽
    行内元素是不可以设置宽度和高度的
    span buis stong em ins del
行内块级元素(display: inline-block)
    为了能让元素既能够不独占一行,又可以设置宽度和高度
    
background-repeat用来控制background-image的显示
    repeat | no-repeat | repeat-x | repeat-y
同一个标签可以同时设置背景颜色和背景图片,如果颜色和图片同时存在,那么图片会覆盖颜色
background-position用来设置背景图片定位
    background-position: 水平方向(left | center | right) 垂直方向(top | center | bottom)
    background-position: 100px 200px (利用像素)

jQuery的基本结构
    (function( window, undefined ) {
        var jQuery = function() {
            return new jQuery.prototype.init();
        }
        jQuery.prototype = {
            constructor: jQuery
        }
        jQuery.prototype.init.prototype = jQuery.prototype;
        window.jQuery = window.$ = jQuery;
    })( window );

    jQuery的本质是一个闭包
        为了避免多个框架的冲突
    jQuery如何让外界访问内部定义的局部变量
        window.xxx = xxx;
    jQuery为什么要给自己传递一个window参数?
        为了方便后期压缩代码(压缩后变量名会变成w之类的简写,如果不传的话不知道是全局的window)
        为了提升查找的效率
    jQuery为什么要给自己接收一个undefined参数?
        为了方便后期压缩代码
        IE9以下的浏览器undefined可以被修改, 为了保证内部使用的undefined不被修改, 所以需要接收一个正确的undefined

jQuery入口函数
    1. 传入 '' null undefined NaN  0  false
        返回空的jQuery对象
    2. 字符串
        代码片段:会将创建好的DOM元素存储到jQuery对象中返回
        选择器: 会将找到的所有元素存储到jQuery对象中返回
    3. 数组:
        会将数组中存储的元素依次存储到jQuery对象中立返回
    4. 除上述类型以外的:
        会将传入的数据存储到jQuery对象中返回
在OC开发中,如果一个变量暂停不使用,可以赋值为0(基本属性类型)或者赋值为空(对象类型)
在swift开发中,nil也是一个特殊的类型.因为和真实的类型不匹配是不能赋值的(swift是强类型语言)
但是开发中赋值nil,在所难免.因此推出了可选类型

可选类型的取值:
  空值
  有值

定义一个可选类型有两种写法
  写法一: let name : Optional<String> = nil
  写法二: 语法糖(常用) let name : String? = nil

给可选类型赋值
  // string打印出来的是可选类型,所有会带Optional
  var string : Optional<String> = nil 

取出可选类型的真实值(解包)
  注意:如果可选类型为nil,强制取出其中的值(解包),会出错
  print(string!)

规范写法
  if string != nil {
      print(string!)
  }

简单写法
  为了让在if语句中可以方便使用string
  if let str = string {
      print(str)
  }
  或者直接
  if let string = string {
      print(string)
  }

可选类型自动解包
  如果前面的可选类型,没有值,后面所有的代码都不会执行
  如果前面的可选类型,有值,系统会自动将vc进行解包,并且使用vc
  vc?.view
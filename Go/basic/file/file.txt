Go语言中操作文件也是通过一个FILE结构体
type file struct {
    pfd     poll.FD
    name    string
    dirinfo *dirInfo 
}
type File struct {
    *file // os specific
}

// Open用于打开文件,如果文件不存在不会自动创建,并且只能读取不能写入
fp, err := os.Open("/var/log/test.log")

// Close用于关闭文件
// 通常在打开之后直接使用defer调用
defer func() {
    if err = fp.Close(); err != nil {
        fmt.Println("Close Failed")
    }
}()

读取文件方式:
    1. Read
        // 会接收一个切片,将读取到的数据放到切片中
        // 会一次性将文件中的数据全部读取进来,前提是切片大小足够
        buff := make([]byte, 7)
        for {
            len, err := fp.Read(buff)
            if err != nil || len <= 0 {
                break
            }
            fmt.Print(string(buff[:len]))
        }
        